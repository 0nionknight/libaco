#summary Solving the Travelling Salesman Problem with libaco.
#labels Featured

= Building your project with the GNU C++ Compiler =

== Project template ==

= Getting started =

{{{
AntColonyConfiguration config;
SimpleAntColony colony(new TspProblem(), config);
colony.run(); // run one iteration
std::vector<unsigned int> tour = colony.get_best_tour();
double length = colony.get_best_tour_length();
}}}

= Defining the problem =

{{{
class TspProblem : public OptimizationProblem {
  private:
    std::map<unsigned int,bool> visited_vertices_;
    Matrix<unsigned int> *distances_;
    unsigned int start_vertex_;
  public:
    TspProblem(Matrix<unsigned int> *distances);
    ~TspProblem();
    unsigned int get_max_tour_size();
    unsigned int number_of_vertices();
    std::map<unsigned int,double> get_feasible_start_vertices();
    std::map<unsigned int,double> get_feasible_neighbours(unsigned int vertex);
    double eval_tour(const std::vector<unsigned int> &tour);
    double pheromone_update(unsigned int v, double tour_length);
    void added_vertex_to_tour(unsigned int vertex);
    bool is_tour_complete(const std::vector<unsigned int> &tour);
    std::vector<unsigned int> apply_local_search(const std::vector<unsigned int> &tour);
    void cleanup();
};
}}}

= The command line client =